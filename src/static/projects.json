{
    "projects": [
        {
            "title": "Commute Optimization Application",
            "quickDescription" : "Application to pull google maps and store commute data.",
            "description": "I built an application that can be spun up utilizing AWS, terraform and supabase.\nThis application will then pull google maps within a specified time range utilizing an AWS cloudformation cron job. Once sufficient data has been stored, a user then can connect the evidece.dev dashboard and view the results for their commute.",
            "gitHubLink": "https://github.com/Cole-T-Harris/OptimizeRouteApp",
            "link": "/route-optimization/",
            "image": "Route-Optimization-Dashboard.png",
            "techstack": {
                "Languages": ["Golang"],
                "Web Technologies": [],
                "Tools & Software": ["Git", "GitHub", "Visual Studio", "Makefile"],
                "Database": ["PostgreSQL"],
                "Frameworks": ["Evidence.dev"],
                "Operating Systems": [],
                "Cloud": ["Terraform", "AWS Lambda", "AWS Cloudformation", "AWS CloudFront", "AWS S3"]
            }
        },
        {
            "title": "Portfolio Webpage",
            "quickDescription" : "Portfolio webpage using Typscript and React",
            "description": "I built a new landing page for my website to provide a simpler and more animated portfolio from the existing static resume webpage.\n\nThis new webpage was built utilizing Typescript and React with styling from Bootstrap. The webpage initially is a vite react typescript template.\n\nTo host this webpage, the built app is stored on an S3 bucket and then served from AWS CloudFront from the root directory.",
            "gitHubLink": "https://github.com/Cole-T-Harris/Portfolio-webpage",
            "image": "Portfolio-Webpage.png",
            "techstack": {
                "Languages": ["Typscript"],
                "Web Technologies": ["React", "Bootstrap", "NPM", "CSS"],
                "Tools & Software": ["Git", "GitHub", "Visual Studio"],
                "Database": [],
                "Frameworks": [],
                "Operating Systems": [],
                "Cloud": ["AWS IAM", "AWS S3", "AWS CloudFront", "AWS Route 53"]
            }
        },
        {
            "title": "Serverless AWS REST API",
            "quickDescription" : "Built a serverless AWS REST API, with Python, AWS Lambda and AWS API Gateway",
            "description": "I transformed my FastAPI REST API, previously hosted on a Linux EC2 instance, into a serverless architecture on AWS. This involved refactoring the codebase and deploying multiple AWS Lambda functions, integrated with an AWS API Gateway.\n\nThe code was refactored from the FastAPI framework to standard Python Code. Additionally, the API must make Oauth requests to a Kroger API and obtain Oauth tokens. Acquiring these tokens is automated using CloudFormation to send Lambda requests at regular intervals. These tokens are then stored in a DynamoDB table.",
            "gitHubLink": "https://github.com/Cole-T-Harris/personalwebsite-apigateway",
            "image": "AWS-Lambda1.png",
            "techstack": {
                "Languages": ["Python"],
                "Web Technologies": ["RESTful API"],
                "Tools & Software": ["Git", "GitHub", "Visual Studio", "Postman"],
                "Database": ["NoSQL"],
                "Frameworks": [],
                "Operating Systems": [],
                "Cloud": ["AWS IAM", "AWS S3", "AWS Lambda", "AWS API Gateway", "AWS DynamoDB", "AWS CloudFormation", "AWS Route 53"]
            }
        },
        {
            "title": "Migrated Personal Website to AWS",
            "quickDescription" : "Personal website migrated to AWS with a fastAPI backend in a docker container on an AWS EC2 instance. Frontend React app and static webpages are stored in AWS S3 buckets and served via AWS Cloudfront with DNS routing managed via Route 53",
            "description": "I migrated my personal website from Heroku to AWS with a FastAPI backend in a docker container on an AWS EC2 instance.\n\nThe FastAPI RESTful API sends OAuth2.0 authenticated API requests to Kroger for store and product data to be displayed via my single page React web grocery list app project.\n\nThe Frontend React app and static webpages are stored in AWS S3 and served via AWS Cloudfront with DNS routing managed via Route 53.\n\nI also built a CI/CD pipeline by hosting code on Github and utilizing Github actions to automate the backend FastAPI docker build and push this code to DockerHub. Additionally, the grocery list React app is built on GitHub actions and then pushed to an AWS S3 bucket.",
            "gitHubLink": "https://github.com/Cole-T-Harris/fastapi-pw-api",
            "image": "AWS-Cloud.png",
            "techstack": {
                "Languages": ["Python"],
                "Web Technologies": ["RESTful API", "JSON", "Swagger UI"],
                "Tools & Software": ["Docker", "Git", "GitHub", "GitHub Actions", "Visual Studio", "Postman"],
                "Database": [],
                "Frameworks": ["FastAPI"],
                "Operating Systems": ["Linux"],
                "Cloud": ["AWS IAM", "AWS S3", "AWS EC2", "AWS Route 53"]
            }
        },
        {
            "title": "React.js Grocery List Web App",
            "quickDescription" : "React app that sends API requests to fastAPI (previously Django) backend RESTful API that sends OAuth2.0 authenticated API requests to Kroger. Provides current store data and can export ordered list.",
            "description": "I built a React app that sends API requests to the RESTFul API backend (Previous to my Django and FastAPI projects) that sends OAUTH2.0 authenticated API requests to Kroger.\n\nThis app makes it easier to find items in stores, see if items are in stock at your local store, and then sort your grocery list in an ordered manner so that users can efficiently grocery shop for items without having to wander the store.",
            "gitHubLink": "https://github.com/Cole-T-Harris/fastapi-pw-api",
            "link": "/grocery_app/",
            "image": "Grocery_App.png",
            "techstack": {
                "Languages": ["Javascript"],
                "Web Technologies": ["React.js", "HTML", "SCSS", "Bootstrap", "Webpack", "NPM"],
                "Tools & Software": ["Git", "GitHub", "Github Actions", "Visual Studio"],
                "Database": [],
                "Frameworks": [],
                "Operating Systems": [],
                "Cloud": ["AWS IAM", "AWS S3", "AWS CloudFront", "AWS Route 53"]
            }
        },
        {
            "title": "Django API Backend",
            "quickDescription" : "Django backend that serves webpages and react app and acts as a Restful API. Hosted utilizing Heroku with a custom domain forwarding to heroku app",
            "description": "Django (Python framework) Backend that serves html web pages and react apps and is hosted utilizing Heroku.\n\nAdditionally acts as a RESTful API to handle API requests for React Grocery List Web App.",
            "gitHubLink": "https://github.com/Cole-T-Harris/Django-FullStack-Website",
            "image": "django_backend.jpg",
            "techstack": {
                "Languages": ["Python"],
                "Web Technologies": ["RESTful API"],
                "Tools & Software": ["Git", "GitHub", "Visual Studio", "Postman"],
                "Database": ["MySQL"],
                "Frameworks": ["Django"],
                "Operating Systems": [],
                "Cloud": ["Heroku"]
            }
        },
        {
            "title": "Convolutional Neural Network for Melanoma Classification on Skin Legion Images: ",
            "quickDescription" : "Built a convolution neural network for utilizing tensorflow and transfer learning within a Jupyter Notebook to classify melanoma from skin legion images.",
            "description": "Built a convolution neural network that utilizes tensorflow and transfer learning within a Jupyter Notebook to classify melanoma from skin legion images. ",
            "gitHubLink": "https://github.com/Cole-T-Harris/CS345-Final-Project",
            "image": "CS345ProjectAccuracy.png",
            "techstack": {
                "Languages": ["Python"],
                "Web Technologies": [],
                "Tools & Software": ["Git", "GitHub", "Jupyter Notebook", "Google Colab", "Tensorflow"],
                "Database": [],
                "Frameworks": [],
                "Operating Systems": [],
                "Cloud": []
            }
        },
        {
            "title": "Static Bootstrap Personal Webpage",
            "quickDescription" : "Static resume personal webpage built utilizing bootstrap and other basic web technologies.",
            "description": "I built a static webpage to showcase my professional experience and achievements. This was all built utilizing HTML, CSS, and Javascript.\n\nThe website is built utilizing bootstrap and custom CSS sytling as well as a Javascript script that utilzes jQuery to add onscreen effects.",
            "gitHubLink": "https://github.com/Cole-T-Harris/Personal-Website",
            "link": "/resume/",
            "image": "Static-Personal-Webpage.png",
            "techstack": {
                "Languages": ["HTML", "CSS", "Javascript"],
                "Web Technologies": ["Jquery", "Bootstrap"],
                "Tools & Software": ["Git", "GitHub", "Visual Studio"],
                "Database": [],
                "Frameworks": [],
                "Operating Systems": [],
                "Cloud": []
            }
        }
    ]
}